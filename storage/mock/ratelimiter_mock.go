// Code generated by MockGen. DO NOT EDIT.
// Source: storage/ratelimiter.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/portey/batch-saver/models"
	reflect "reflect"
)

// Mocksinker is a mock of sinker interface
type Mocksinker struct {
	ctrl     *gomock.Controller
	recorder *MocksinkerMockRecorder
}

// MocksinkerMockRecorder is the mock recorder for Mocksinker
type MocksinkerMockRecorder struct {
	mock *Mocksinker
}

// NewMocksinker creates a new mock instance
func NewMocksinker(ctrl *gomock.Controller) *Mocksinker {
	mock := &Mocksinker{ctrl: ctrl}
	mock.recorder = &MocksinkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mocksinker) EXPECT() *MocksinkerMockRecorder {
	return m.recorder
}

// Sink mocks base method
func (m *Mocksinker) Sink(cxt context.Context, events []models.Event) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sink", cxt, events)
	ret0, _ := ret[0].(error)
	return ret0
}

// Sink indicates an expected call of Sink
func (mr *MocksinkerMockRecorder) Sink(cxt, events interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sink", reflect.TypeOf((*Mocksinker)(nil).Sink), cxt, events)
}
