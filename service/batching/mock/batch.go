// Code generated by MockGen. DO NOT EDIT.
// Source: service/batching/batch.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/portey/batch-saver/models"
	reflect "reflect"
)

// MockSinker is a mock of Sinker interface
type MockSinker struct {
	ctrl     *gomock.Controller
	recorder *MockSinkerMockRecorder
}

// MockSinkerMockRecorder is the mock recorder for MockSinker
type MockSinkerMockRecorder struct {
	mock *MockSinker
}

// NewMockSinker creates a new mock instance
func NewMockSinker(ctrl *gomock.Controller) *MockSinker {
	mock := &MockSinker{ctrl: ctrl}
	mock.recorder = &MockSinkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSinker) EXPECT() *MockSinkerMockRecorder {
	return m.recorder
}

// Sink mocks base method
func (m *MockSinker) Sink(arg0 context.Context, arg1 []models.Event) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sink", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Sink indicates an expected call of Sink
func (mr *MockSinkerMockRecorder) Sink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sink", reflect.TypeOf((*MockSinker)(nil).Sink), arg0, arg1)
}
